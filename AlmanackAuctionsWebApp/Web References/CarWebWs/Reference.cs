//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AlmanackAuctionsWebApp.CarWebWs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CarweBVRRWebServiceSoap", Namespace="http://ws.carwebuk.com")]
    public partial class CarweBVRRWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback strB2BGetVehicleByVRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback strB2BGetVehicleByVINOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CarweBVRRWebService() {
            this.Url = global::AlmanackAuctionsWebApp.Properties.Settings.Default.AlmanackAuctionsWebApp_CarWebWs_CarweBVRRWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event strB2BGetVehicleByVRMCompletedEventHandler strB2BGetVehicleByVRMCompleted;
        
        /// <remarks/>
        public event strB2BGetVehicleByVINCompletedEventHandler strB2BGetVehicleByVINCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.carwebuk.com/strB2BGetVehicleByVRM", RequestNamespace="http://ws.carwebuk.com", ResponseNamespace="http://ws.carwebuk.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode strB2BGetVehicleByVRM(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVRM, string strVersion) {
            object[] results = this.Invoke("strB2BGetVehicleByVRM", new object[] {
                        strUserName,
                        strPassword,
                        strClientRef,
                        strClientDescription,
                        strKey1,
                        strVRM,
                        strVersion});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void strB2BGetVehicleByVRMAsync(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVRM, string strVersion) {
            this.strB2BGetVehicleByVRMAsync(strUserName, strPassword, strClientRef, strClientDescription, strKey1, strVRM, strVersion, null);
        }
        
        /// <remarks/>
        public void strB2BGetVehicleByVRMAsync(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVRM, string strVersion, object userState) {
            if ((this.strB2BGetVehicleByVRMOperationCompleted == null)) {
                this.strB2BGetVehicleByVRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstrB2BGetVehicleByVRMOperationCompleted);
            }
            this.InvokeAsync("strB2BGetVehicleByVRM", new object[] {
                        strUserName,
                        strPassword,
                        strClientRef,
                        strClientDescription,
                        strKey1,
                        strVRM,
                        strVersion}, this.strB2BGetVehicleByVRMOperationCompleted, userState);
        }
        
        private void OnstrB2BGetVehicleByVRMOperationCompleted(object arg) {
            if ((this.strB2BGetVehicleByVRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.strB2BGetVehicleByVRMCompleted(this, new strB2BGetVehicleByVRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.carwebuk.com/strB2BGetVehicleByVIN", RequestNamespace="http://ws.carwebuk.com", ResponseNamespace="http://ws.carwebuk.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode strB2BGetVehicleByVIN(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVIN, string strVersion) {
            object[] results = this.Invoke("strB2BGetVehicleByVIN", new object[] {
                        strUserName,
                        strPassword,
                        strClientRef,
                        strClientDescription,
                        strKey1,
                        strVIN,
                        strVersion});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void strB2BGetVehicleByVINAsync(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVIN, string strVersion) {
            this.strB2BGetVehicleByVINAsync(strUserName, strPassword, strClientRef, strClientDescription, strKey1, strVIN, strVersion, null);
        }
        
        /// <remarks/>
        public void strB2BGetVehicleByVINAsync(string strUserName, string strPassword, string strClientRef, string strClientDescription, string strKey1, string strVIN, string strVersion, object userState) {
            if ((this.strB2BGetVehicleByVINOperationCompleted == null)) {
                this.strB2BGetVehicleByVINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstrB2BGetVehicleByVINOperationCompleted);
            }
            this.InvokeAsync("strB2BGetVehicleByVIN", new object[] {
                        strUserName,
                        strPassword,
                        strClientRef,
                        strClientDescription,
                        strKey1,
                        strVIN,
                        strVersion}, this.strB2BGetVehicleByVINOperationCompleted, userState);
        }
        
        private void OnstrB2BGetVehicleByVINOperationCompleted(object arg) {
            if ((this.strB2BGetVehicleByVINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.strB2BGetVehicleByVINCompleted(this, new strB2BGetVehicleByVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void strB2BGetVehicleByVRMCompletedEventHandler(object sender, strB2BGetVehicleByVRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class strB2BGetVehicleByVRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal strB2BGetVehicleByVRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void strB2BGetVehicleByVINCompletedEventHandler(object sender, strB2BGetVehicleByVINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class strB2BGetVehicleByVINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal strB2BGetVehicleByVINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591